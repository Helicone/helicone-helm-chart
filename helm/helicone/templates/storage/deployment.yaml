{{- if .Values.storage.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.storage.fullname" . }}
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
spec:
  {{- if not .Values.storage.autoscaling.enabled }}
  replicas: {{ .Values.storage.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "supabase.storage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.storage.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "supabase.storage.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      {{- with .Values.storage.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.storage.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          {{- with .Values.storage.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "supabase.storage.fullname" . }}
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "supabase.storage.fullname" $ }}
                  key: DB_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "helicone.name" . }}-postgres
                  key: POSTGRES_USER
          command: ["/bin/sh", "-c"]
          args:
            - |
              until pg_isready -h $(DB_HOST) -p $(DB_PORT) -U $(DB_USER); do
              echo "Waiting for database to start..."
              sleep 2
              done
            - echo "Database is ready"
      containers:
        - name: {{ include "supabase.storage.name" $ }}
          securityContext:
            {{- toYaml .Values.storage.securityContext | nindent 12 }}
          image: "{{ .Values.storage.image.repository }}:{{ .Values.storage.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.storage.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.storage.environment }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "supabase.storage.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "helicone.name" . }}-postgres
                  key: POSTGRES_PASSWORD
            - name: DATABASE_URL
              value: $(DB_DRIVER)://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "helicone.name" . }}-supabase
                  key: JWT_SECRET
            - name: ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "helicone.name" . }}-supabase
                  key: ANON_KEY
            - name: SERVICE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "helicone.name" . }}-supabase
                  key: SERVICE_ROLE_KEY
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          {{- with .Values.storage.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.storage.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.storage.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.storage.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.storage.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.storage.persistence.enabled }}
        - name: storage-data
          persistentVolumeClaim:
            claimName: {{ include "supabase.storage.fullname" . }}-pvc
        {{- end }}
        {{- with .Values.storage.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
